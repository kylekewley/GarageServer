// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GarageMetaData.proto

#ifndef PROTOBUF_GarageMetaData_2eproto__INCLUDED
#define PROTOBUF_GarageMetaData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GarageMetaData_2eproto();
void protobuf_AssignDesc_GarageMetaData_2eproto();
void protobuf_ShutdownFile_GarageMetaData_2eproto();

class GarageMetaData;
class GarageMetaData_GarageDoor;

// ===================================================================

class GarageMetaData_GarageDoor : public ::google::protobuf::Message {
 public:
  GarageMetaData_GarageDoor();
  virtual ~GarageMetaData_GarageDoor();

  GarageMetaData_GarageDoor(const GarageMetaData_GarageDoor& from);

  inline GarageMetaData_GarageDoor& operator=(const GarageMetaData_GarageDoor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GarageMetaData_GarageDoor& default_instance();

  void Swap(GarageMetaData_GarageDoor* other);

  // implements Message ----------------------------------------------

  GarageMetaData_GarageDoor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GarageMetaData_GarageDoor& from);
  void MergeFrom(const GarageMetaData_GarageDoor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string doorName = 1;
  inline bool has_doorname() const;
  inline void clear_doorname();
  static const int kDoorNameFieldNumber = 1;
  inline const ::std::string& doorname() const;
  inline void set_doorname(const ::std::string& value);
  inline void set_doorname(const char* value);
  inline void set_doorname(const char* value, size_t size);
  inline ::std::string* mutable_doorname();
  inline ::std::string* release_doorname();
  inline void set_allocated_doorname(::std::string* doorname);

  // required uint32 positionId = 2;
  inline bool has_positionid() const;
  inline void clear_positionid();
  static const int kPositionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 positionid() const;
  inline void set_positionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GarageMetaData.GarageDoor)
 private:
  inline void set_has_doorname();
  inline void clear_has_doorname();
  inline void set_has_positionid();
  inline void clear_has_positionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* doorname_;
  ::google::protobuf::uint32 positionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GarageMetaData_2eproto();
  friend void protobuf_AssignDesc_GarageMetaData_2eproto();
  friend void protobuf_ShutdownFile_GarageMetaData_2eproto();

  void InitAsDefaultInstance();
  static GarageMetaData_GarageDoor* default_instance_;
};
// -------------------------------------------------------------------

class GarageMetaData : public ::google::protobuf::Message {
 public:
  GarageMetaData();
  virtual ~GarageMetaData();

  GarageMetaData(const GarageMetaData& from);

  inline GarageMetaData& operator=(const GarageMetaData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GarageMetaData& default_instance();

  void Swap(GarageMetaData* other);

  // implements Message ----------------------------------------------

  GarageMetaData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GarageMetaData& from);
  void MergeFrom(const GarageMetaData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GarageMetaData_GarageDoor GarageDoor;

  // accessors -------------------------------------------------------

  // repeated .GarageMetaData.GarageDoor doors = 1;
  inline int doors_size() const;
  inline void clear_doors();
  static const int kDoorsFieldNumber = 1;
  inline const ::GarageMetaData_GarageDoor& doors(int index) const;
  inline ::GarageMetaData_GarageDoor* mutable_doors(int index);
  inline ::GarageMetaData_GarageDoor* add_doors();
  inline const ::google::protobuf::RepeatedPtrField< ::GarageMetaData_GarageDoor >&
      doors() const;
  inline ::google::protobuf::RepeatedPtrField< ::GarageMetaData_GarageDoor >*
      mutable_doors();

  // @@protoc_insertion_point(class_scope:GarageMetaData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GarageMetaData_GarageDoor > doors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GarageMetaData_2eproto();
  friend void protobuf_AssignDesc_GarageMetaData_2eproto();
  friend void protobuf_ShutdownFile_GarageMetaData_2eproto();

  void InitAsDefaultInstance();
  static GarageMetaData* default_instance_;
};
// ===================================================================


// ===================================================================

// GarageMetaData_GarageDoor

// required string doorName = 1;
inline bool GarageMetaData_GarageDoor::has_doorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GarageMetaData_GarageDoor::set_has_doorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GarageMetaData_GarageDoor::clear_has_doorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GarageMetaData_GarageDoor::clear_doorname() {
  if (doorname_ != &::google::protobuf::internal::kEmptyString) {
    doorname_->clear();
  }
  clear_has_doorname();
}
inline const ::std::string& GarageMetaData_GarageDoor::doorname() const {
  return *doorname_;
}
inline void GarageMetaData_GarageDoor::set_doorname(const ::std::string& value) {
  set_has_doorname();
  if (doorname_ == &::google::protobuf::internal::kEmptyString) {
    doorname_ = new ::std::string;
  }
  doorname_->assign(value);
}
inline void GarageMetaData_GarageDoor::set_doorname(const char* value) {
  set_has_doorname();
  if (doorname_ == &::google::protobuf::internal::kEmptyString) {
    doorname_ = new ::std::string;
  }
  doorname_->assign(value);
}
inline void GarageMetaData_GarageDoor::set_doorname(const char* value, size_t size) {
  set_has_doorname();
  if (doorname_ == &::google::protobuf::internal::kEmptyString) {
    doorname_ = new ::std::string;
  }
  doorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GarageMetaData_GarageDoor::mutable_doorname() {
  set_has_doorname();
  if (doorname_ == &::google::protobuf::internal::kEmptyString) {
    doorname_ = new ::std::string;
  }
  return doorname_;
}
inline ::std::string* GarageMetaData_GarageDoor::release_doorname() {
  clear_has_doorname();
  if (doorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = doorname_;
    doorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GarageMetaData_GarageDoor::set_allocated_doorname(::std::string* doorname) {
  if (doorname_ != &::google::protobuf::internal::kEmptyString) {
    delete doorname_;
  }
  if (doorname) {
    set_has_doorname();
    doorname_ = doorname;
  } else {
    clear_has_doorname();
    doorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 positionId = 2;
inline bool GarageMetaData_GarageDoor::has_positionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GarageMetaData_GarageDoor::set_has_positionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GarageMetaData_GarageDoor::clear_has_positionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GarageMetaData_GarageDoor::clear_positionid() {
  positionid_ = 0u;
  clear_has_positionid();
}
inline ::google::protobuf::uint32 GarageMetaData_GarageDoor::positionid() const {
  return positionid_;
}
inline void GarageMetaData_GarageDoor::set_positionid(::google::protobuf::uint32 value) {
  set_has_positionid();
  positionid_ = value;
}

// -------------------------------------------------------------------

// GarageMetaData

// repeated .GarageMetaData.GarageDoor doors = 1;
inline int GarageMetaData::doors_size() const {
  return doors_.size();
}
inline void GarageMetaData::clear_doors() {
  doors_.Clear();
}
inline const ::GarageMetaData_GarageDoor& GarageMetaData::doors(int index) const {
  return doors_.Get(index);
}
inline ::GarageMetaData_GarageDoor* GarageMetaData::mutable_doors(int index) {
  return doors_.Mutable(index);
}
inline ::GarageMetaData_GarageDoor* GarageMetaData::add_doors() {
  return doors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GarageMetaData_GarageDoor >&
GarageMetaData::doors() const {
  return doors_;
}
inline ::google::protobuf::RepeatedPtrField< ::GarageMetaData_GarageDoor >*
GarageMetaData::mutable_doors() {
  return &doors_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GarageMetaData_2eproto__INCLUDED
